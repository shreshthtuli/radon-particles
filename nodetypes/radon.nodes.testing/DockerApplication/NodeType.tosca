tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - file: radonnodesabstract__ContainerApplication.tosca
    namespace_uri: radon.nodes.abstract
    namespace_prefix: radonnodesabstract
  - file: radonartifacts__Ansible.tosca
    namespace_uri: radon.artifacts
    namespace_prefix: radonartifacts
  - file: radoncapabilitiescontainer__DockerRuntime.tosca
    namespace_uri: radon.capabilities.container
    namespace_prefix: radoncapabilitiescontainer
  - file: radonnodesabstract__ContainerRuntime.tosca
    namespace_uri: radon.nodes.abstract
    namespace_prefix: radonnodesabstract
node_types:
  radon.nodes.testing.DockerApplication:
    derived_from: radon.nodes.abstract.ContainerApplication
    metadata:
      targetNamespace: "radon.nodes.testing"
      abstract: "false"
      final: "false"
    properties:
      image:
        type: string
        description: Image name
      cmd:
        type: string
        description: Command to execute
    requirements:
      - engine:
          capability: radon.capabilities.container.DockerRuntime
          node: radon.nodes.abstract.ContainerRuntime
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            description: The standard create operation
            inputs:
              image:
                type: string
                required: true
                default: { get_attribute: [ SELF, image ] }
              host_ip:
                type: string
                required: true
                default: { get_attribute: [ SELF, engine, public_address ] }
              cmd:
                type: string
                required: true
                default: { get_attribute: [ SELF, cmd ] }
              username:
                type: string
                required: true
                default: { get_attribute: [ SELF, engine, name ] }
            implementation:
              primary: /nodetypes/radon.nodes.testing/DockerApplication/files/run/dockerrun.yaml
              timeout: 0
          delete:
            inputs:
              host_ip:
                type: string
                required: true
                default: { get_property: [ SELF, engine, public_address ] }
            implementation:
              primary: /nodetypes/radon.nodes.testing/DockerApplication/files/del/docekrdel.yaml
              timeout: 0
    artifacts:
      del:
        type: radon.artifacts.Ansible
        file: /nodetypes/radon.nodes.testing/DockerApplication/files/del/docekrdel.yaml
      run:
        type: radon.artifacts.Ansible
        file: /nodetypes/radon.nodes.testing/DockerApplication/files/run/dockerrun.yaml
